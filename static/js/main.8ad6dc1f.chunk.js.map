{"version":3,"sources":["App.tsx","reportWebVitals.ts","index.tsx"],"names":["useStyles","makeStyles","textBox","display","flexDirection","alignItems","marginBottom","sweetHipster","fontFamily","marginLeft","blantickScript","foreFarmers","grestalScript","kaileyLatief","lifeStyle","octoberTwilight","sunFlowers","helloHoney","App","classes","fonts","useState","text","setText","className","Typography","variant","TextField","id","onChange","e","target","value","fullWidth","label","placeholder","map","font","index","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"yPAOMA,EAAYC,aAAW,iBAAO,CAClCC,QAAS,CACPC,QAAS,OACTC,cAAe,MACfC,WAAY,SACZC,aAAc,QAEhBC,aAAc,CACZC,WAAY,eACZC,WAAY,QAEdC,eAAgB,CACdF,WAAY,iBACZC,WAAY,QAEdE,YAAa,CACXH,WAAY,cACZC,WAAY,QAEdG,cAAe,CACbJ,WAAY,gBACZC,WAAY,QAEdI,aAAc,CACZL,WAAY,eACZC,WAAY,QAEdK,UAAW,CACTN,WAAY,YACZC,WAAY,QAEdM,gBAAiB,CACfP,WAAY,kBACZC,WAAY,QAEdO,WAAY,CACVR,WAAY,aACZC,WAAY,QAEdQ,WAAY,CACVT,WAAY,aACZC,WAAY,YA0BDS,EApBO,WACpB,IAAMC,EAAUnB,IACVoB,EAAQ,CAACD,EAAQT,eAAgBS,EAAQR,YAAaQ,EAAQP,cAAeO,EAAQF,WAAYE,EAAQN,aAAcM,EAAQL,UAAWK,EAAQJ,gBAAiBI,EAAQH,YAFvJ,EAGFK,mBAAS,IAHP,mBAGnBC,EAHmB,KAGbC,EAHa,KAK1B,OACE,sBAAKC,UAAU,MAAf,UACE,cAACC,EAAA,EAAD,CAAYC,QAAQ,KAApB,iDACA,cAACC,EAAA,EAAD,CAAWC,GAAG,iBAAiBC,SAAU,SAAAC,GAAC,OAAIP,EAAQO,EAAEC,OAAOC,QAAQC,WAAS,EAACC,MAAO,GAAIR,QAAQ,WAAWS,YAAa,mBAE1Hf,EAAMgB,KAAI,SAACC,EAAMC,GAAP,OACZ,sBAAKd,UAAWL,EAAQjB,QAAxB,UACE,eAACuB,EAAA,EAAD,CAAYC,QAAQ,KAApB,mBAAgCY,EAAQ,EAAxC,SACA,cAACb,EAAA,EAAD,CAAYC,QAAQ,KAAKF,UAAWa,EAApC,SAA2Cf,cCrDpCiB,EAZS,SAACC,GACnBA,GAAeA,aAAuBC,UACxC,6BAAqBC,MAAK,YAAkD,IAA/CC,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAON,GACPO,EAAQP,OCHdQ,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,SAM1Bb,M","file":"static/js/main.8ad6dc1f.chunk.js","sourcesContent":["import React, { useState } from \"react\";\nimport './App.css';\nimport TextField from '@material-ui/core/TextField';\n\n\nimport { makeStyles, Typography } from \"@material-ui/core\";\n\nconst useStyles = makeStyles(() => ({\n  textBox: {\n    display: \"flex\",\n    flexDirection: \"row\",\n    alignItems: \"center\",\n    marginBottom: \"2rem\"\n  },\n  sweetHipster: {\n    fontFamily: \"SweetHipster\",\n    marginLeft: \"1rem\"\n  },\n  blantickScript: {\n    fontFamily: \"BlantickScript\",\n    marginLeft: \"1rem\"\n  },\n  foreFarmers: {\n    fontFamily: \"ForeFarmers\",\n    marginLeft: \"1rem\"\n  },\n  grestalScript: {\n    fontFamily: \"GrestalScript\",\n    marginLeft: \"1rem\"\n  },\n  kaileyLatief: {\n    fontFamily: \"KaileyLatief\",\n    marginLeft: \"1rem\"\n  },\n  lifeStyle: {\n    fontFamily: \"LifeStyle\",\n    marginLeft: \"1rem\"\n  },\n  octoberTwilight: {\n    fontFamily: \"OctoberTwilight\",\n    marginLeft: \"1rem\"\n  },\n  sunFlowers: {\n    fontFamily: \"Sunflowers\",\n    marginLeft: \"1rem\"\n  },\n  helloHoney: {\n    fontFamily: \"HelloHoney\",\n    marginLeft: \"1rem\"\n  }\n\n\n}));\n\nconst App: React.FC = () => {\n  const classes = useStyles();\n  const fonts = [classes.blantickScript, classes.foreFarmers, classes.grestalScript, classes.helloHoney, classes.kaileyLatief, classes.lifeStyle, classes.octoberTwilight, classes.sunFlowers];\n  const [text, setText] = useState('')\n  \n  return (\n    <div className=\"App\">\n      <Typography variant=\"h3\">Type text here to see example fonts</Typography>\n      <TextField id=\"outlined-basic\" onChange={e => setText(e.target.value)} fullWidth label={\"\"} variant=\"outlined\" placeholder={\"type text here\"} />\n\n      { fonts.map((font, index) => (\n      <div className={classes.textBox}>\n        <Typography variant=\"h4\">Font #{index + 1} - </Typography>\n        <Typography variant=\"h2\" className={font}>{text}</Typography>\n      </div>\n      ))}\n    </div>\n  );\n}\n\nexport default App;\n","import { ReportHandler } from 'web-vitals';\n\nconst reportWebVitals = (onPerfEntry?: ReportHandler) => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}