{"version":3,"sources":["assets/tradeslinger2.png","components/Header/Header.tsx","App.tsx","reportWebVitals.ts","index.tsx"],"names":["useStyles","makeStyles","helloHoney","fontFamily","marginLeft","Header","classes","className","src","logo","alt","Typography","variant","textBox","display","flexDirection","alignItems","marginBottom","instructions","sweetHipster","blantickScript","foreFarmers","grestalScript","kaileyLatief","lifeStyle","octoberTwilight","sunFlowers","App","fonts","useState","text","setText","TextField","id","onChange","e","target","value","fullWidth","label","placeholder","map","font","index","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"uPAAe,G,MAAA,IAA0B,2C,uBCKnCA,EAAYC,aAAW,iBAAO,CAChCC,WAAY,CACRC,WAAY,aACZC,WAAY,YAcLC,EAVS,WACpB,IAAMC,EAAUN,IAChB,OACI,sBAAKO,UAAU,SAAf,UACI,qBAAKC,IAAKC,EAAMC,IAAI,SACpB,cAACC,EAAA,EAAD,CAAYC,QAAQ,KAAKL,UAAWD,EAAQJ,WAA5C,6BCRNF,EAAYC,aAAW,iBAAO,CAClCY,QAAS,CACPC,QAAS,OACTC,cAAe,MACfC,WAAY,SACZC,aAAc,QAEhBC,aAAc,CACZD,aAAc,QAEhBE,aAAc,CACZhB,WAAY,eACZC,WAAY,QAEdgB,eAAgB,CACdjB,WAAY,iBACZC,WAAY,QAEdiB,YAAa,CACXlB,WAAY,cACZC,WAAY,QAEdkB,cAAe,CACbnB,WAAY,gBACZC,WAAY,QAEdmB,aAAc,CACZpB,WAAY,eACZC,WAAY,QAEdoB,UAAW,CACTrB,WAAY,YACZC,WAAY,QAEdqB,gBAAiB,CACftB,WAAY,kBACZC,WAAY,QAEdsB,WAAY,CACVvB,WAAY,aACZC,WAAY,QAEdF,WAAY,CACVC,WAAY,aACZC,WAAY,YA2BDuB,EAvBO,WACpB,IAAMrB,EAAUN,IACV4B,EAAiB,CAACtB,EAAQc,eAAgBd,EAAQe,YAAaf,EAAQgB,cAAehB,EAAQJ,WAAYI,EAAQiB,aAAcjB,EAAQkB,UAAWlB,EAAQmB,gBAAiBnB,EAAQoB,YAFhK,EAGFG,mBAAiB,IAHf,mBAGnBC,EAHmB,KAGbC,EAHa,KAK1B,OACE,gCACE,cAAC,EAAD,IACA,sBAAKxB,UAAU,OAAf,UACE,cAACI,EAAA,EAAD,CAAYC,QAAQ,KAAKL,UAAWD,EAAQY,aAA5C,iDACA,cAACc,EAAA,EAAD,CAAWC,GAAG,iBAAiBC,SAAU,SAACC,GAAD,OAA4CJ,EAAQI,EAAEC,OAAOC,QAAQC,WAAS,EAACC,MAAO,GAAI3B,QAAQ,WAAW4B,YAAa,iBAAkBjC,UAAWD,EAAQY,eAEtMU,EAAMa,KAAI,SAACC,EAAMC,GAAP,OACV,sBAAKpC,UAAWD,EAAQO,QAAxB,UACA,eAACF,EAAA,EAAD,CAAYC,QAAQ,KAApB,mBAAgC+B,EAAQ,EAAxC,SACA,cAAChC,EAAA,EAAD,CAAYC,QAAQ,KAAKL,UAAWmC,EAApC,SAA2CZ,iBC1DtCc,EAZS,SAACC,GACnBA,GAAeA,aAAuBC,UACxC,6BAAqBC,MAAK,YAAkD,IAA/CC,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAON,GACPO,EAAQP,OCHdQ,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,SAM1Bb,M","file":"static/js/main.d9c60fc3.chunk.js","sourcesContent":["export default __webpack_public_path__ + \"static/media/tradeslinger2.03106bc7.png\";","import React from \"react\";\r\nimport \"./Header.css\";\r\nimport logo from \"../../assets/tradeslinger2.png\"\r\nimport { makeStyles, Typography } from \"@material-ui/core\";\r\n\r\nconst useStyles = makeStyles(() => ({\r\n    helloHoney: {\r\n        fontFamily: \"HelloHoney\",\r\n        marginLeft: \"1rem\"\r\n  }\r\n}))\r\n\r\nconst Header:React.FC = () => {\r\n    const classes = useStyles();\r\n    return (\r\n        <div className=\"header\">\r\n            <img src={logo} alt=\"logo\" />\r\n            <Typography variant=\"h1\" className={classes.helloHoney}>Font Tester</Typography>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Header;","import React, { useState } from \"react\";\nimport './App.css';\nimport TextField from '@material-ui/core/TextField';\n\nimport Header from \"./components/Header/Header\"\n\n\nimport { makeStyles, Typography } from \"@material-ui/core\";\n\nconst useStyles = makeStyles(() => ({\n  textBox: {\n    display: \"flex\",\n    flexDirection: \"row\",\n    alignItems: \"center\",\n    marginBottom: \"2rem\"\n  },\n  instructions: {\n    marginBottom: \"1rem\"\n  },\n  sweetHipster: {\n    fontFamily: \"SweetHipster\",\n    marginLeft: \"1rem\"\n  },\n  blantickScript: {\n    fontFamily: \"BlantickScript\",\n    marginLeft: \"1rem\"\n  },\n  foreFarmers: {\n    fontFamily: \"ForeFarmers\",\n    marginLeft: \"1rem\"\n  },\n  grestalScript: {\n    fontFamily: \"GrestalScript\",\n    marginLeft: \"1rem\"\n  },\n  kaileyLatief: {\n    fontFamily: \"KaileyLatief\",\n    marginLeft: \"1rem\"\n  },\n  lifeStyle: {\n    fontFamily: \"LifeStyle\",\n    marginLeft: \"1rem\"\n  },\n  octoberTwilight: {\n    fontFamily: \"OctoberTwilight\",\n    marginLeft: \"1rem\"\n  },\n  sunFlowers: {\n    fontFamily: \"Sunflowers\",\n    marginLeft: \"1rem\"\n  },\n  helloHoney: {\n    fontFamily: \"HelloHoney\",\n    marginLeft: \"1rem\"\n  }\n}));\n\nconst App: React.FC = () => {\n  const classes = useStyles();\n  const fonts:string[] = [classes.blantickScript, classes.foreFarmers, classes.grestalScript, classes.helloHoney, classes.kaileyLatief, classes.lifeStyle, classes.octoberTwilight, classes.sunFlowers];\n  const [text, setText] = useState<string>('')\n  \n  return (\n    <div>\n      <Header />\n      <div className=\"text\">\n        <Typography variant=\"h3\" className={classes.instructions}>Type text here to see example fonts</Typography>\n        <TextField id=\"outlined-basic\" onChange={(e: React.ChangeEvent<HTMLInputElement>) => setText(e.target.value)} fullWidth label={\"\"} variant=\"outlined\" placeholder={\"type text here\"} className={classes.instructions} />\n\n        { fonts.map((font, index) => (\n          <div className={classes.textBox}>\n          <Typography variant=\"h4\">Font #{index + 1} - </Typography>\n          <Typography variant=\"h2\" className={font}>{text}</Typography>\n        </div>\n        ))}\n      </div>\n    </div>\n  );\n}\n\nexport default App;\n","import { ReportHandler } from 'web-vitals';\n\nconst reportWebVitals = (onPerfEntry?: ReportHandler) => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}